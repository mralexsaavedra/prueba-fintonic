{"version":3,"sources":["components/Header/index.js","context/TokenContext.js","services/getToken.js","services/settings.js","services/getData.js","hooks/useData.js","components/Botones/index.js","components/Spinner/index.js","components/Table/index.js","pages/Home/index.js","pages/Next/index.js","App.js","serviceWorker.js","index.js"],"names":["Header","className","href","icon","Context","React","createContext","TokenContextProvider","children","useState","token","setToken","useEffect","apiURL","fetch","then","res","json","getToken","Provider","value","fromApiResponseToData","apiResponse","response_code","results","useData","props","useContext","TokenContext","loading","setLoading","data","setData","getData","pags","Botones","keyword","map","pag","to","key","parseInt","Spinner","cabeceras","autores","Table","item","index","category","type","difficulty","question","random","Math","floor","length","getAutorRandom","Home","Next","params","App","component","HomePage","path","NextPage","library","add","faBars","faPlus","faCogs","faComments","faSignInAlt","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.d77c42e2.chunk.js","sourcesContent":["import React from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nimport './Header.css';\r\n\r\nexport default function Header() {\r\n  return (\r\n    <header className=\"header\">\r\n      <a href=\"/\">\r\n        <FontAwesomeIcon icon=\"bars\" />\r\n        Browse\r\n      </a>\r\n      <a href=\"/\">\r\n        <FontAwesomeIcon icon=\"plus\" />\r\n        Add new questions\r\n      </a>\r\n      <a href=\"/\">\r\n        <FontAwesomeIcon icon=\"cogs\" />\r\n        API\r\n      </a>\r\n      <a href=\"/\">\r\n        <FontAwesomeIcon icon=\"comments\" />\r\n        Discuss\r\n      </a>\r\n      <a href=\"/\">\r\n        <FontAwesomeIcon icon=\"sign-in-alt\" />\r\n        Login\r\n      </a>\r\n    </header>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport getToken from '../services/getToken';\r\n\r\nconst Context = React.createContext({});\r\n\r\nexport function TokenContextProvider({ children }) {\r\n  const [token, setToken] = useState({});\r\n\r\n  useEffect(() => {\r\n    getToken().then(setToken);\r\n  }, []);\r\n\r\n  return (\r\n    <Context.Provider\r\n      value={{\r\n        token,\r\n        setToken,\r\n      }}\r\n    >\r\n      {children}\r\n    </Context.Provider>\r\n  );\r\n}\r\n\r\nexport default Context;\r\n","import { API_TOKEN } from './settings';\r\n\r\nexport default function getToken() {\r\n  const apiURL = `${API_TOKEN}?command=request`;\r\n\r\n  return fetch(apiURL)\r\n    .then((res) => res.json())\r\n    .then((res) => {\r\n      const { token } = res;\r\n      return token;\r\n    });\r\n}\r\n","export const API_TOKEN = 'https://opentdb.com/api_token.php';\r\n\r\nexport const API_URL = 'https://opentdb.com/api.php';\r\n","import { API_URL } from './settings';\r\n\r\nconst fromApiResponseToData = (apiResponse) => {\r\n  if (apiResponse.response_code === 0) {\r\n    return apiResponse.results;\r\n  }\r\n  return [];\r\n};\r\n\r\nexport default function getData({ token }) {\r\n  const apiURL = `${API_URL}?amount=10&token=${token}`;\r\n\r\n  return fetch(apiURL)\r\n    .then((res) => res.json())\r\n    .then(fromApiResponseToData);\r\n}\r\n","import { useEffect, useState, useContext } from 'react';\r\nimport TokenContext from '../context/TokenContext';\r\nimport getData from '../services/getData';\r\n\r\nexport function useData(props) {\r\n  const { token } = useContext(TokenContext);\r\n  const [loading, setLoading] = useState(false);\r\n  const [data, setData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    getData({ token }).then((data) => {\r\n      setData(data);\r\n      setLoading(false);\r\n    });\r\n  }, [token, props]);\r\n\r\n  return { loading, data };\r\n}\r\n","import React from 'react';\r\nimport { Link } from 'wouter';\r\n\r\nimport './Botones.css';\r\n\r\nconst pags = [1, 2, 3, 4];\r\n\r\nexport default function Botones({ keyword }) {\r\n  return (\r\n    <center>\r\n      <ul className=\"App-pagination\">\r\n        {pags.map((pag) => {\r\n          return (\r\n            <Link to={`/page/${pag}`} key={pag}>\r\n              <li\r\n                className={\r\n                  !keyword && pag === 1\r\n                    ? 'active'\r\n                    : parseInt(keyword) === pag\r\n                    ? 'active '\r\n                    : ''\r\n                }\r\n              >\r\n                {pag}\r\n              </li>\r\n            </Link>\r\n          );\r\n        })}\r\n        <Link\r\n          to={\r\n            !keyword\r\n              ? '/page/2'\r\n              : parseInt(keyword) === 4\r\n              ? '/page/1'\r\n              : `/page/${parseInt(keyword) + 1}`\r\n          }\r\n        >\r\n          <li>&#62;</li>\r\n        </Link>\r\n      </ul>\r\n    </center>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport './styles.css';\r\n\r\nexport default function Spinner() {\r\n  return (\r\n    <div className=\"lds-ring\">\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\n\r\nimport './Table.css';\r\n\r\nconst cabeceras = [\r\n  'ID',\r\n  'Category',\r\n  'Type',\r\n  'Difficulty',\r\n  'Question/Statement',\r\n  'Created By',\r\n];\r\n\r\nconst autores = [\r\n  'Karen',\r\n  'Noctithra',\r\n  'Coldflame',\r\n  'Avalica',\r\n  'Codex',\r\n  'IronsFinest',\r\n  'KazuhiraMewtwo',\r\n  'Muhjk',\r\n  'Death2121',\r\n];\r\n\r\nconst getAutorRandom = () => {\r\n  const random = Math.floor(Math.random() * autores.length);\r\n  return autores[random];\r\n};\r\n\r\nexport default function Table({ data }) {\r\n  return (\r\n    <div className=\"table-container\">\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            {cabeceras.map((item, index) => {\r\n              return <th key={index}>{item}</th>;\r\n            })}\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {data.map((item, index) => {\r\n            return (\r\n              <tr key={index}>\r\n                <td>{index}</td>\r\n                <td>{item.category}</td>\r\n                <td>{item.type}</td>\r\n                <td>{item.difficulty}</td>\r\n                <td>{item.question}</td>\r\n                <td>{getAutorRandom()}</td>\r\n              </tr>\r\n            );\r\n          })}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { useData } from '../../hooks/useData';\r\n\r\nimport Botones from '../../components/Botones';\r\nimport Spinner from '../../components/Spinner';\r\nimport Table from '../../components/Table';\r\n\r\nexport default function Home() {\r\n  const { loading, data } = useData();\r\n\r\n  return (\r\n    <>\r\n      {loading ? (\r\n        <Spinner />\r\n      ) : (\r\n        <div className=\"App-wrapper\">\r\n          <div className=\"App-main\">\r\n            <div className=\"App-table\">\r\n              <h2 className=\"App-title\">Browse Questions</h2>\r\n              <Table data={data} />\r\n              <Botones />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { useData } from '../../hooks/useData';\r\n\r\nimport Botones from '../../components/Botones';\r\nimport Spinner from '../../components/Spinner';\r\nimport Table from '../../components/Table';\r\n\r\nexport default function Next({ params }) {\r\n  const { keyword } = params;\r\n  const { loading, data } = useData(keyword);\r\n\r\n  return (\r\n    <>\r\n      {loading ? (\r\n        <Spinner />\r\n      ) : (\r\n        <div className=\"App-wrapper\">\r\n          <div className=\"App-main\">\r\n            <div className=\"App-table\">\r\n              <h2 className=\"App-title\">Browse Questions</h2>\r\n              <Table data={data} />\r\n              <Botones keyword={keyword} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","import React from 'react';\nimport { Route } from 'wouter';\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport {\n  faBars,\n  faPlus,\n  faCogs,\n  faComments,\n  faSignInAlt,\n} from '@fortawesome/free-solid-svg-icons';\n\nimport Header from './components/Header';\n\nimport HomePage from './pages/Home';\nimport NextPage from './pages/Next';\n\nimport { TokenContextProvider } from './context/TokenContext';\n\nimport './App.css';\n\nlibrary.add(faBars, faPlus, faCogs, faComments, faSignInAlt);\n\nexport default function App() {\n  return (\n    <TokenContextProvider>\n      <div className=\"App\">\n        <section className=\"App-content\">\n          <Header />\n          <Route component={HomePage} path=\"/\" />\n          <Route component={NextPage} path=\"/page/:keyword\" />\n        </section>\n      </div>\n    </TokenContextProvider>\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}